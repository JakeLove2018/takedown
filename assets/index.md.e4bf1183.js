import{_ as e,c as t,o as i,N as a}from"./chunks/framework.fc7b29f2.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"index.md"}'),r={name:"index.md"},o=a('<p>layout: home</p><p>features:</p><ul><li>icon: ⚡️ title: Vite, The DX that can&#39;t be beat details: Lorem ipsum...</li><li>icon: 🖖 title: Power of Vue meets Markdown details: Lorem ipsum...</li><li>icon: 🛠️ title: Simple and minimal, always details: Lorem ipsum</li></ul><p>interface Feature { // 在 feature 框里展示icon，目前只支持emoji icon?: string</p><p>// feature 标题. title: string</p><p>// feature 详情. details: string } interface Hero { // `text&#39; 的字符串所示。带有品牌颜色，通常会很短，例如项目名称。 name?: string</p><p>// hero 部分的文本。这将被定义成<code>h1</code>标签 text: string</p><p>// Tagline 会展示在 <code>text</code> 下面. tagline?: string</p><p>// action 按钮显示在 hero 区域。 actions?: HeroAction[] }</p><p>interface HeroAction { // 按钮的的主题颜色，默认为 <code>brand</code>. theme?: &#39;brand&#39; | &#39;alt&#39;</p><p>// 按钮的文案. text: string</p><p>// 按钮链接. link: string }</p><p>layout: home</p><p>hero: name: VitePress text: Vite &amp; Vue powered static site generator. tagline: Lorem ipsum... image: src: /logo.png alt: VitePress actions: - theme: brand text: Get Started link: /guide/what-is-vitepress - theme: alt text: View on GitHub link: <a href="https://github.com/vuejs/vitepress" target="_blank" rel="noreferrer">https://github.com/vuejs/vitepress</a></p>',14),n=[o];function s(p,c,l,d,m,_){return i(),t("div",null,n)}const g=e(r,[["render",s]]);export{h as __pageData,g as default};
